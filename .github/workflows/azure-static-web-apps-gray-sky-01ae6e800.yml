name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    permissions:
       id-token: write
       contents: read
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false
      - name: Install OIDC Client from Core Package
        run: npm install @actions/core@1.6.0 @actions/http-client
      - name: Get Id Token
        uses: actions/github-script@v6
        id: idtoken
        with:
           script: |
               const coredemo = require('@actions/core')
               return await coredemo.getIDToken()
           result-encoding: string
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install dependencies
        run: |
          cd llm-compare/frontend
          npm install
      - name: Build frontend
        run: |
          cd llm-compare/frontend
          rm -rf dist
          npm run build
      - name: Create staticwebapp.config.json
        run: |
          echo '{
            "mimeTypes": {
              ".js": "application/javascript",
              ".mjs": "application/javascript",
              ".ts": "application/javascript",
              ".tsx": "application/javascript",
              ".html": "text/html"
            },
            "routes": [
              {
                "route": "/assets/*",
                "headers": {
                  "Content-Type": "application/javascript"
                }
              },
              {
                "route": "/*",
                "serve": "/index.html",
                "statusCode": 200
              }
            ],
            "navigationFallback": {
              "rewrite": "/index.html",
              "exclude": ["/images/*.{png,jpg,gif}", "/css/*", "/assets/*", "/*.js"]
            },
            "responseOverrides": {
              "400": {
                "rewrite": "/index.html",
                "statusCode": 200
              },
              "404": {
                "rewrite": "/index.html",
                "statusCode": 200
              }
            }
          }' > llm-compare/frontend/dist/staticwebapp.config.json
      - name: Verify build output
        run: |
          cd llm-compare/frontend/dist
          ls -la
          cat index.html
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: '1ff71b00f0883f6c9b0dac55e0a4df942574f58aceb77219a28ddcc919047e1906-33833fbf-3131-4b58-8b43-6270306891fa000032401ae6e800'
          action: "upload"
          app_location: "./llm-compare/frontend" # App source code path
          api_location: "" # Api source code path - optional
          output_location: "dist" # Built app content directory - optional
          github_id_token: ${{ steps.idtoken.outputs.result }}
          skip_app_build: true # Skip build since we already built it
          app_artifact_location: "llm-compare/frontend/dist" # Location of the built app

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          action: "close" 
